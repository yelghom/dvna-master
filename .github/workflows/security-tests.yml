
name: "Security Tests"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "41 3 * * 4"

jobs:
  sonarQube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Check Java version
        run: java -version # Verify the Java version

      - name: Install Sonar Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner
          export PATH="$PATH:${{ github.workspace }}/sonar-scanner/bin"
          echo "SONAR_SCANNER_HOME=${{ github.workspace }}/sonar-scanner" >> $GITHUB_ENV
          echo "PATH=${{ github.workspace }}/sonar-scanner/bin:$PATH" >> $GITHUB_ENV

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -X -Dsonar.projectKey=yelghom_dvna-master -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=yelghom
     
      - name: Upload SonarQube XML Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sonar-xml-report
          path: .scannerwork/report-task.txt
          
      - name: Clean up
        run: |
          rm -rf sonar-scanner
  codeql:
    name: CodeQl Scan
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: results.sarif
  
      - name: Upload SARIF file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: results.sarif

  snyk:
    name: Snyk Scan
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
       
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: npm install bcryptjs
      - run: npm install
      - run: npm i -g snyk
      - run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - run: snyk monitor

      - name: install snyk-to-html
        run: |
          npm install snyk-to-html -g
          snyk test --json | snyk-to-html -o result.html
          mkdir downloads
          cp -v /home/runner/work/dvna-master/dvna-master/*.html /home/runner/work/dvna-master/dvna-master/downloads

      - name: Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: downloads
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GT_TOKEN }}
          publish_dir: ./docs
